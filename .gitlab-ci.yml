stages:
  - install
  - lint
  - build
  - deploy

image: registry.gitlab.techfides.cz/tf-internal/docker-images/node:10

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

install:
  stage: install
  cache:
    key: "$CI_BUILD_REF_NAME-$CI_PIPELINE_ID"
    paths:
      - node_modules/
  script:
    - npm ci --unsafe-perm=true
  tags:
    - docker

lint:
  stage: lint
  cache:
    key: "$CI_BUILD_REF_NAME-$CI_PIPELINE_ID"
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run lint
  tags:
    - docker

build:
  stage: build
  only:
    - develop
  image: docker:19.03
  services:
    - docker:19.03-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - docker

deploy:staging:
  stage: deploy
  only:
    - develop
  image:
    name: bitnami/kubectl:1.19
    entrypoint: [""]
  script:
    - kubectl -n tf-platform-staging set image deployment/tf-hub tf-hub=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  environment:
    name: staging
    url: https://hub-staging.techfides.app
  dependencies: []
  tags:
    - docker

deploy:production:
  stage: deploy
  when: manual
  only:
    - master
  image:
    name: bitnami/kubectl:1.19
    entrypoint: [""]
  script:
    - kubectl -n tf-platform-production set image deployment/tf-hub tf-hub=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  environment:
    name: production
    url: https://hub.techfides.app
  dependencies: []
  tags:
    - docker
